{"ast":null,"code":"import _slicedToArray from \"c:\\\\Users\\\\user\\\\Desktop\\\\Dae-Alright-Frontend\\\\dae-alright\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"c:\\\\Users\\\\user\\\\Desktop\\\\Dae-Alright-Frontend\\\\dae-alright\\\\src\\\\components\\\\Navigation\\\\NavLoggedIn.jsx\";\nimport React from \"react\";\nimport \"../Navigation/Navigation.scss\";\nimport { Button } from 'react-bootstrap';\n\nfunction simulateNetworkRequest() {\n  return new Promise(resolve => setTimeout(resolve, 2000));\n}\n\nfunction NavLoggedin() {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        isLogin = _useState2[0],\n        setLoading = _useState2[1];\n\n  useEffect(() => {\n    if (isLogin) {\n      simulateNetworkRequest().then(() => {\n        setLoading(false);\n      });\n    }\n  }, [isLogin]);\n\n  const handleClick = () => setLoading(true);\n\n  return React.createElement(Button, {\n    variant: \"primary\",\n    disabled: isLogin,\n    onClick: !isLogin ? handleClick : null,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, isLogin ? 'LOGIN/SIGNUP' : 'Click to load');\n}\n\nrender(React.createElement(NavLoggedin, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 34\n  },\n  __self: this\n}));\nexport default NavLoggedin;","map":{"version":3,"sources":["c:/Users/user/Desktop/Dae-Alright-Frontend/dae-alright/src/components/Navigation/NavLoggedIn.jsx"],"names":["React","Button","simulateNetworkRequest","Promise","resolve","setTimeout","NavLoggedin","useState","isLogin","setLoading","useEffect","then","handleClick","render"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,+BAAP;AACA,SAAQC,MAAR,QAAqB,iBAArB;;AAGA,SAASC,sBAAT,GAAkC;AAChC,SAAO,IAAIC,OAAJ,CAAYC,OAAO,IAAIC,UAAU,CAACD,OAAD,EAAU,IAAV,CAAjC,CAAP;AACD;;AAED,SAASE,WAAT,GAAuB;AAAA,oBACSC,QAAQ,CAAC,KAAD,CADjB;AAAA;AAAA,QACdC,OADc;AAAA,QACLC,UADK;;AAGrBC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIF,OAAJ,EAAa;AACXN,MAAAA,sBAAsB,GAAGS,IAAzB,CAA8B,MAAM;AAClCF,QAAAA,UAAU,CAAC,KAAD,CAAV;AACD,OAFD;AAGD;AACF,GANQ,EAMN,CAACD,OAAD,CANM,CAAT;;AAQA,QAAMI,WAAW,GAAG,MAAMH,UAAU,CAAC,IAAD,CAApC;;AAEA,SACE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAC,SADV;AAEE,IAAA,QAAQ,EAAED,OAFZ;AAGE,IAAA,OAAO,EAAE,CAACA,OAAD,GAAWI,WAAX,GAAyB,IAHpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGJ,OAAO,GAAG,cAAH,GAAoB,eAL9B,CADF;AASD;;AAEDK,MAAM,CAAC,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAD,CAAN;AAEA,eAAeP,WAAf","sourcesContent":["import React from \"react\";\r\nimport \"../Navigation/Navigation.scss\";\r\nimport {Button} from 'react-bootstrap';\r\n\r\n\r\nfunction simulateNetworkRequest() {\r\n  return new Promise(resolve => setTimeout(resolve, 2000));\r\n}\r\n\r\nfunction NavLoggedin() {\r\n  const [isLogin, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (isLogin) {\r\n      simulateNetworkRequest().then(() => {\r\n        setLoading(false);\r\n      });\r\n    }\r\n  }, [isLogin]);\r\n\r\n  const handleClick = () => setLoading(true);\r\n\r\n  return (\r\n    <Button\r\n      variant=\"primary\"\r\n      disabled={isLogin}\r\n      onClick={!isLogin ? handleClick : null}\r\n    >\r\n      {isLogin ? 'LOGIN/SIGNUP' : 'Click to load'}\r\n    </Button>\r\n  );\r\n}\r\n\r\nrender(<NavLoggedin />);\r\n\r\nexport default NavLoggedin;\r\n"]},"metadata":{},"sourceType":"module"}